[{"D:\\Projects JavaScript\\JS-Job\\src\\index.js":"1","D:\\Projects JavaScript\\JS-Job\\src\\App.js":"2","D:\\Projects JavaScript\\JS-Job\\src\\components\\header\\index.js":"3","D:\\Projects JavaScript\\JS-Job\\src\\components\\header\\const.js":"4","D:\\Projects JavaScript\\JS-Job\\src\\components\\table\\index.js":"5","D:\\Projects JavaScript\\JS-Job\\src\\components\\filter\\index.js":"6","D:\\Projects JavaScript\\JS-Job\\src\\components\\header\\nav.jsx":"7","D:\\Projects JavaScript\\JS-Job\\src\\components\\table\\tableData.jsx":"8","D:\\Projects JavaScript\\JS-Job\\src\\components\\table\\const.js":"9"},{"size":196,"mtime":1608504684000,"results":"10","hashOfConfig":"11"},{"size":295,"mtime":1608504684000,"results":"12","hashOfConfig":"11"},{"size":478,"mtime":1608504684000,"results":"13","hashOfConfig":"11"},{"size":140,"mtime":1608504684000,"results":"14","hashOfConfig":"11"},{"size":3171,"mtime":1608504684000,"results":"15","hashOfConfig":"11"},{"size":1175,"mtime":1608504684000,"results":"16","hashOfConfig":"11"},{"size":655,"mtime":1608504684000,"results":"17","hashOfConfig":"11"},{"size":898,"mtime":1608504684000,"results":"18","hashOfConfig":"11"},{"size":605,"mtime":1608504684000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"87pcu4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Projects JavaScript\\JS-Job\\src\\index.js",[],["42","43"],"D:\\Projects JavaScript\\JS-Job\\src\\App.js",[],"D:\\Projects JavaScript\\JS-Job\\src\\components\\header\\index.js",["44"],"import React from 'react';\nimport Nav from './nav';\nimport './style.scss';\n\nconst Header = () => {\n  return (\n    <header className='header'>\n      <div className='container'>\n        <div className='header__row'>\n          <div className='header__logo'></div>\n          <Nav className={'header__nav'} />\n          <a href='' className='header__help'>\n            Техподдержка\n          </a>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","D:\\Projects JavaScript\\JS-Job\\src\\components\\header\\const.js",[],"D:\\Projects JavaScript\\JS-Job\\src\\components\\table\\index.js",["45"],"import React from 'react';\nimport TableData from './tableData';\nimport './style.scss';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\n\nexport default function TableGraph() {\n  const [users, setUsers] = React.useState([]);\n  const [activeModal, setActiveModal] = React.useState(false);\n  const [newUser, setNewUser] = React.useState({\n    dateOfRegistry: '',\n    fullName: '',\n    position: '',\n    email: '',\n    password: '',\n    phone: '',\n  });\n\n  const emails = users.map((item) => item.email);\n\n  React.useEffect(() => {\n    axios.get(`http://localhost:3000/database.json`).then(({ data }) => setUsers(data.users));\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    emails.forEach((item) => {\n      if (item != newUser.email) {\n        setUsers([...users, newUser]);\n        setNewUser({\n          dateOfRegistry: '',\n          fullName: '',\n          position: '',\n          email: '',\n          password: '',\n          phone: '',\n        });\n        setActiveModal(false);\n      } else {\n        console.log('Error ');\n        setNewUser({});\n      }\n    });\n  };\n  const handleClick = () => {\n    setActiveModal(activeModal ? false : true);\n  };\n  const handleSaveData = (event) => {\n    setNewUser({\n      id: users[users.length - 1].id + 1,\n      dateOfRegistry: '',\n      fullName: event.target.form[0].value,\n      position: event.target.form[1].value,\n      email: event.target.form[2].value,\n      password: event.target.form[3].value,\n      phone: event.target.form[4].value,\n    });\n  };\n  return (\n    <div style={{ height: '140vh', width: '100%' }}>\n      <TableData usersData={users} />\n      <Button variant='contained' color='primary' onClick={() => handleClick()}>\n        Вызвать модалку\n      </Button>\n     {activeModal && (\n      <div className='modal'>\n        <form onSubmit={(event) => handleSubmit(event)}>\n          <input\n            onChange={(event) => handleSaveData(event)}\n            value={newUser.fullName}\n            required\n            type='text'\n            placeholder='Введите ФИО'\n          />\n          <input\n            onChange={(event) => handleSaveData(event)}\n            value={newUser.position}\n            required\n            type='text'\n            placeholder='Введите Должность'\n          />\n          <input\n            onChange={(event) => handleSaveData(event)}\n            value={newUser.email}\n            required\n            type='text'\n            placeholder='Введите Почту'\n          />\n          <input\n            onChange={(event) => handleSaveData(event)}\n            value={newUser.password}\n            required\n            type='text'\n            placeholder='Введите Пароль'\n          />\n          <input\n            onChange={(event) => handleSaveData(event)}\n            value={newUser.phone}\n            required\n            type='text'\n            placeholder='Введите Телефон, привязанный к мессенджеру'\n          />\n          <button>Добавить данные</button>\n        </form>\n      </div>\n    )}\n    </div>\n  );\n}","D:\\Projects JavaScript\\JS-Job\\src\\components\\filter\\index.js",[],"D:\\Projects JavaScript\\JS-Job\\src\\components\\header\\nav.jsx",[],"D:\\Projects JavaScript\\JS-Job\\src\\components\\table\\tableData.jsx",["46"],"import React from 'react';\nimport Time from 'react-time';\nimport { columns } from './const';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst TableData = ({ usersData }) => {\n  const result = [...usersData];\n\n  const countLength = () => {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    let separator = '.';\n    return usersData.map((item, index) => {\n      return usersData[index].dateOfRegistry.length !== 0\n        ? item.dateOfRegistry\n        : (result[index].dateOfRegistry = `${date}${separator}${\n            month < 10 ? `0${month}` : `${month}`\n          }${separator}${year}`);\n    });\n  };\n  countLength();\n  return (\n    <React.Fragment>\n      <DataGrid rows={result} columns={columns} pageSize={20} checkboxSelection />\n    </React.Fragment>\n  );\n};\n\nexport default TableData;\n","D:\\Projects JavaScript\\JS-Job\\src\\components\\table\\const.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":12,"column":11,"nodeType":"53","endLine":12,"endColumn":47},{"ruleId":"54","severity":1,"message":"55","line":28,"column":16,"nodeType":"56","messageId":"57","endLine":28,"endColumn":18},{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":12},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Time' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]